/* ------- *
 * $MIXINS *
 * ------- */

/**
 * Mixin providing a PX fallback for REM font-sizes
 * Source: http://css-tricks.com/snippets/css/less-mixin-for-rem-font-sizing/
 */
@function calculateRem($size) {
  $remSize: $size / 16px;
  @return $remSize * 1rem;
}

@mixin font-size($size) {
  font-size: $size;
  font-size: calculateRem($size);
}
/* USAGE
p {
  @include font-size(14px)
}

/**
 * Mixin handling breakpoints for media queries
 */
@mixin bp-desk {
  @media only screen and (min-width : 1025px) {
    @content;
  }
}
@mixin bp-desk-small {
  @media only screen and (min-width : 1025px) and (max-width: 1200px) {
    @content; 
  }
}
@mixin bp-nav {
  @media only screen and (min-width : 1025px) and (max-width: 1280px) {
    @content;
  }
}
@mixin bp-massive {
  @media only screen and (min-width : 1201px) {
    @content;
  }
}

@mixin bp-high-res {
  @media only screen and (min-width : 1685px) {
    @content;
  }
}

@mixin bp-tablet {
  @media only screen and (min-width : 480px) and (max-width: 1024px) {
    @content;
  }
}

@mixin bp-tablet-landscape {
  @media only screen and (min-width : 768px) and (max-width: 1024px) and (orientation : landscape) {
    @content;
  }
}

@mixin bp-phone {
  @media only screen and (min-width : 0px) and (max-width: 480px) {
    @content;
  }
}
@mixin bp-phone-landscape {
  @media only screen and (min-width : 321px) and (max-width: 480px) {
    @content; 
  }
}

/** USAGE
.sidebar {
  width: 60%
  float: left;
  margin: 0 2% 0 0;
  @include bp-small {
    width: 100%;
    float: none;
    margin: 0;
  }
}
/**
 * Mixins Animations and keyframes
 */
@mixin keyframes($animation-name) {
  @-webkit-keyframes $animation-name {
    @content;
  }
  @-moz-keyframes $animation-name {
    @content;
  }  
  @-ms-keyframes $animation-name {
    @content;
  }
  @-o-keyframes $animation-name {
    @content;
  }  
  @keyframes $animation-name {
    @content;
  }
}

/* USAGE
@include keyframes(slide-down) {
  0% { opacity: 1; }
  90% { opacity: 0; }
}

.element {
  width: 100px;
  height: 100px;
  background: black;
  @include animation('slide-down 5s 3');
}
*/
/**
 * Mixins Transitions
 */
@mixin transition($args...) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -ms-transition: $args;
  -o-transition: $args;
  transition: $args;
}
/* USAGE
a {
  color: gray;
  @include transition(color .3s ease);
  &:hover {
    color: black;
  }
}
*/
/**
 * Mixins Cross browser opacity
 */
@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}
/* USAGE
.faded-text {
  @include opacity(0.8);
}
*/

/**
 * Mixins used by helper classes .pull-image--$pos and .pull-quote--$pos
 * 1. returns `left` if given `right` and vice versa
 */
@mixin pull-quote($direction) {
	$opposite: opposite-position($direction); /* 1 */

	text-align: $opposite;
	float: $direction;
	margin: 0 0 $space 0;
	margin-#{$direction}: -4em;	
	margin-#{$opposite}: $space;	

	@include breakpoint(medium) {
		margin-#{$direction}: 0;
	}
}

@mixin pull-image($direction) {
	$opposite: opposite-position($direction); /* 1 */

	float: $direction;
	margin: 0 0 $space 0;
	margin-#{$opposite}: $space;
}